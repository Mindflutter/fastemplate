[tool.poetry]
name = "fastemplate"
version = "0.0.1"
description = "A template for FastAPI projects"
authors = ["Igor Golyanov <thornograph@gmail.com>"]
packages = [
    { include = "*", from = "src" },
]

[tool.poetry.scripts]
app = "main:main"

[tool.poetry.dependencies]
python = "~3.10"
uvicorn = "^0.18.3"
fastapi = "^0.85.1"
requests = "^2.28.1"
sqlalchemy = { "extras" = ["mypy"], version = "^1.4.41" }
asyncpg = "^0.26.0"
psycopg2-binary = "^2.9.4"
alembic = "^1.8.1"
prometheus-fastapi-instrumentator = "^5.7.1"

[tool.poetry.dev-dependencies]
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
pytest-xdist = { extras = ["psutil"], version = "^2.5.0" }
pylint = "^2.15.4"
isort = "^5.10.1"
docformatter = "^1.5.0"
black = "^22.10.0"
mypy = "^0.982"
ipython = "^8.5.0"
pytest-asyncio = "^0.19.0"
httpx = "^0.23.0"
greenlet = "^1.1.3"

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]
follow_imports = "silent"
show_column_numbers = true

[[tool.mypy.overrides]]
module = ["uvicorn", "prometheus_client", "prometheus_fastapi_instrumentator.*"]
ignore_missing_imports = true

[tool.pylint.master]
fail-under = 7.5
ignore-paths = [".*/alembic/.*.py"]
# ignore pydantic no-name-in-module error
extension-pkg-allow-list = ["pydantic"]

[tool.pylint.messages_control]
disable = [
    # functions should mainly be short and self-explanatory
    "missing-function-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    # pydantic models usually have none
    "too-few-public-methods",
    "logging-fstring-interpolation"
]

[tool.pylint.miscellaneous]
# only treat FIXMEs as worthy warnings
notes = ["FIXME"]

[tool.pylint.format]
max-line-length = 120

[tool.black]
line-length = 120

[tool.isort]
line_length = 120

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
